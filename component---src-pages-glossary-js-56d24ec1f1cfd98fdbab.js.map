{"version":3,"sources":["webpack:///./src/components/list-with-heading.js","webpack:///./src/pages/glossary.js"],"names":["ListWithHeading","props","cls","heading","items","className","length","map","usage","key","slug","href","name","defaultProps","Glossary","location","glossaryData","useState","viewportSize","setViewportSize","queries","small","medium","large","onChange","matches","title","classnames","edges","node","frontmatter","html","id","dangerouslySetInnerHTML","__html","glossaryUsages"],"mappings":"wNAGMA,G,UAAkB,SAAAC,GAAU,IACzBC,EAA6BD,EAA7BC,IAAKC,EAAwBF,EAAxBE,QADmB,EACKF,EAAfG,aADU,MACF,GADE,EAEhC,OACC,yBAAKC,UAAWH,GAEf,4BACEC,EADF,KACaC,EAAME,OADnB,QAIGF,IAAUA,EAAME,SAAW,yBAAKD,UAAU,QAAf,WAE7BD,EAAME,OAAS,GACf,4BACEF,EAAMG,KAAI,SAAAC,GAAK,OACf,wBAAIC,IAAKD,EAAME,MACd,uBAAGC,KAAI,IAAMH,EAAME,MAASF,EAAMI,cAezCZ,EAAgBa,aAAe,CAC9BX,IAAI,GACJC,QAAQ,GACRC,MAAO,IAGOJ,Q,UCoDAc,UAhFE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACXC,EAD0B,OAC1BA,aAD0B,EA2BMC,mBAAS,IAA1CC,EA3B2B,KA2BbC,EA3Ba,KAwClC,OACC,kBAAC,IAAD,CAAQJ,SAAUA,GACjB,kBAAC,IAAD,CACCK,QAAS,CACRC,MAAO,qBACPC,OAAQ,6CACRC,MAAO,uBAERC,SApBwB,SAAAC,GAC1B,OAAIA,EAAQJ,MACJF,EAAgB,MAGpBM,EAAQH,OACJH,EAAgB,MAGjBA,EAAgB,SAatB,kBAAC,IAAD,CAAKO,MAAM,aACX,6BAASrB,UAAU,iBAClB,wCACA,6BAASA,UAAWsB,IAAW,UAAWT,IACxCF,EAAaY,MAAMrB,KAAI,YAAe,IAAZsB,EAAW,EAAXA,KAClBC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAErB,OACC,6BAAStB,IAAKqB,EAAYrB,KACzB,iCACC,uBAAGuB,GAAIF,EAAYrB,IAAKE,KAAI,IAAMmB,EAAYrB,KAC7C,4BAAKqB,EAAYJ,QAElB,mCAASI,EAAYrB,KACrB,yBAAKwB,wBAAyB,CAAEC,OAAQH,MAEzC,kBAAC,EAAD,CACC7B,IAAG,aACHC,QAAO,gBACPC,MAAO+B,EAAe,IAAIL,EAAYrB,gB","file":"component---src-pages-glossary-js-56d24ec1f1cfd98fdbab.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ListWithHeading = props => {\n\tconst { cls, heading, items = [] } = props\n\treturn (\n\t\t<div className={cls}>\n\t\t\t{/* title  */}\n\t\t\t<h3>\n\t\t\t\t{heading} ({items.length}):\n\t\t\t</h3>\n\t\t\t{/* when there are no items, show a no data note  */}\n\t\t\t{(!items || !items.length) && <div className=\"note\">No Data</div>}\n\t\t\t{/* render items if they exist  */}\n\t\t\t{items.length > 0 && (\n\t\t\t\t<ul>\n\t\t\t\t\t{items.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<a href={`/${usage.slug}`}>{usage.name}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nListWithHeading.propTypes = {\n\tcls: PropTypes.string,\n\theading: PropTypes.string.isRequired,\n\titems: PropTypes.array,\n}\n\nListWithHeading.defaultProps = {\n\tcls: ``,\n\theading: ``,\n\titems: [],\n}\n\nexport default ListWithHeading\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport ReactMedia from 'react-media'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport ListWithHeading from '../components/list-with-heading'\n\nimport './glossary.scss'\n\nconst Glossary = ({ location }) => {\n\tconst { glossaryData } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tglossaryData: allMarkdownRemark(\n\t\t\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t\t\t) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\thtml\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfields {\n\t\t\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\texcerpt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t)\n\n\tconst [viewportSize, setViewportSize] = useState(``)\n\tconst onMediaQueryChange = matches => {\n\t\tif (matches.small) {\n\t\t\treturn setViewportSize(`sm`)\n\t\t}\n\n\t\tif (matches.medium) {\n\t\t\treturn setViewportSize(`md`)\n\t\t}\n\n\t\treturn setViewportSize(`lg`)\n\t}\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<ReactMedia\n\t\t\t\tqueries={{\n\t\t\t\t\tsmall: '(max-width: 599px)',\n\t\t\t\t\tmedium: '(min-width: 600px) and (max-width: 1199px)',\n\t\t\t\t\tlarge: '(min-width: 1200px)',\n\t\t\t\t}}\n\t\t\t\tonChange={onMediaQueryChange}\n\t\t\t/>\n\t\t\t<SEO title=\"Glossary\" />\n\t\t\t<section className=\"page-glossary\">\n\t\t\t\t<h1>Glossary</h1>\n\t\t\t\t<section className={classnames('listing', viewportSize)}>\n\t\t\t\t\t{glossaryData.edges.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, html } = node\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={frontmatter.key}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<a id={frontmatter.key} href={`#${frontmatter.key}`}>\n\t\t\t\t\t\t\t\t\t\t<h2>{frontmatter.title}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<i>key: {frontmatter.key}</i>\n\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t<ListWithHeading\n\t\t\t\t\t\t\t\t\tcls={`used-rules`}\n\t\t\t\t\t\t\t\t\theading={`Used In Rules`}\n\t\t\t\t\t\t\t\t\titems={glossaryUsages[`#${frontmatter.key}`]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Glossary\n"],"sourceRoot":""}