{"version":3,"sources":["webpack:///./src/utils/render-fragments.js","webpack:///./src/templates/changelog.js"],"names":["getGlossaryUsed","slug","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","edges","filter","key","node","frontmatter","length","id","href","map","html","title","dangerouslySetInnerHTML","__html","keys","Object","glossaryUsages","forEach","getInputAspects","aspects","ruleFormatInputAspects","className","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","find","rule","fields","replace","name","getRuleUsageInRules","ruleId","usages","rulesUsages","usage","to","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate","getChangelogTabulation","changelog","url","file","log","hash","commit","msg","changesUrl","nowrap","align","target","rel","xmlns","x","y","width","height","viewBox","d","location","data","site","context","sitePage","pageTitle","fastmatterAttributes","fileName","relativePath","JSON","parse","ruleChangelog","actRulesRepoUrl","siteMetadata","actRulesPackage","repository","query"],"mappings":"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","file":"component---src-templates-changelog-js-e7d02b6114f0e27550c9.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects:</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql, Link } from 'gatsby'\nimport SEO from '../components/seo'\nimport { getDateTimeFromUnixTimestamp } from '../utils/render-fragments'\n\nimport './changelog.scss'\n\nconst changesSvgIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"16px\" height=\"16px\" viewBox=\"0 0 31.568 31.568\">\n\t\t\t<g>\n\t\t\t\t<g>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M1.889,31.568h8.282V0H1.889V31.568z M4.021,2.958h4.016V9.65H4.021V2.958z M4.021,11.964h4.016v2.776H4.021V11.964z\n          M6.029,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C4.021,25.494,4.92,24.596,6.029,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M11.643,31.568h8.282V0h-8.282V31.568z M13.777,2.958h4.016V9.65h-4.016V2.958z M13.777,11.964h4.016v2.776h-4.016V11.964\n          z M15.784,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C13.777,25.494,14.676,24.596,15.784,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M21.397,0v31.568h8.282V0H21.397z M25.539,28.611c-1.108,0-2.008-0.9-2.008-2.008c0-1.11,0.898-2.008,2.008-2.008\n          c1.11,0,2.009,0.897,2.009,2.008C27.548,27.711,26.648,28.611,25.539,28.611z M27.548,14.74h-4.017v-2.776h4.017V14.74z\n          M27.548,9.651h-4.017V2.958h4.017V9.651z\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t)\n}\n\nconst getChangelogTabulation = (changelog, url, file) => {\n\tif (!changelog.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<table className=\"compact\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t<th>See Changes</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{changelog.map(log => {\n\t\t\t\t\tconst { commit: hash, msg, date } = log\n\t\t\t\t\tconst changesUrl = `${url}/commit/${hash}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={hash}>\n\t\t\t\t\t\t\t<td nowrap=\"true\">{getDateTimeFromUnixTimestamp(date)}</td>\n\t\t\t\t\t\t\t<td>{msg}</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={changesUrl} title=\"See all changes in commit\">\n\t\t\t\t\t\t\t\t\t{changesSvgIcon()}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nexport default ({ location, data }) => {\n\tconst { site, sitePage } = data\n\tconst { context } = sitePage\n\tconst { title: pageTitle, fastmatterAttributes, changelog, fileName } = context\n\n\tconst { relativePath: ruleMarkdownFileName } = fileName\n\n\tconst frontmatter = JSON.parse(fastmatterAttributes)\n\tconst { id: ruleId, name } = frontmatter\n\n\tconst ruleChangelog = JSON.parse(changelog)\n\tconst {\n\t\trepository: { url: actRulesRepoUrl },\n\t} = JSON.parse(site.siteMetadata.actRulesPackage)\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={pageTitle} />\n\t\t\t<section className=\"page-changelog\">\n\t\t\t\t<h1>{pageTitle}</h1>\n\n\t\t\t\t{/* changelog */}\n\t\t\t\t{getChangelogTabulation(ruleChangelog, actRulesRepoUrl, `_rules/${ruleMarkdownFileName}`)}\n\n\t\t\t\t{/* backlink to rule */}\n\t\t\t\t<br />\n\n\t\t\t\t<Link to={`/rules/${ruleId}`}>See Rule: {name}</Link>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($path: String!) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tchangelog\n\t\t\t\tfastmatterAttributes\n\t\t\t\tfileName {\n\t\t\t\t\trelativePath\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tactRulesPackage\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}