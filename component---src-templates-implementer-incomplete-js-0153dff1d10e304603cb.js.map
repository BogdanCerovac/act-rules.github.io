{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/components/rule-header.js","webpack:///./src/components/accessibility_requirements/index.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./src/templates/implementer.js","webpack:///./src/templates/implementer-incomplete.js","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./src/components/note.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./utils/get-hyphenated-string.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es7.object.values.js","webpack:///./node_modules/core-js/modules/_string-repeat.js","webpack:///./src/components/table-testcase-findings.js","webpack:///./src/components/list-of-implementations.js","webpack:///./src/components/badge.js"],"names":["$export","$entries","S","entries","it","RuleHeader","ruleId","ruleName","children","converter","showdown","Converter","className","to","id","dangerouslySetInnerHTML","__html","makeHtml","getMappingOutcomeSentence","mappingType","outcome","outcomeMap","satisfied","outcomeValue","OutcomeMapping","failed","passed","inapplicable","type","AccessibilityRequirementsListing","item","listType","title","learnMore","conformanceTo","url","mapping","key","href","target","rel","BasicListing","accessibilityDocument","aria11","baseURL","TechniqueListing","techniqueId","toUpperCase","aria","c","f","flash","g","h","pdf","scr","sl","sm","svr","t","replace","techniquesTitles","WcagListing","scUrls","num","handle","wcagType","level","AccessibilityRequirements","accessibility_requirements","Object","map","req","toLocaleLowerCase","split","accessibilityItem","$pad","userAgent","WEBKIT_BUG","test","P","F","padEnd","maxLength","this","arguments","length","undefined","Implementer","location","data","implementerData","sitePage","context","JSON","parse","organisation","toolName","actMapping","description","completeMaps","filterByConsistency","incompleteMaps","allRules","edges","node","frontmatter","name","rule_type","impl","find","isIncomplete","data-rule-id","value","consistency","showIncomplete","body","query","items","values","filter","includes","ImplementerIncomplete","fastmatterAttributes","fields","ruleScs","keys","pop","sc","completeImpl","repeat","Note","cls","classnames","toLength","defined","module","exports","that","fillString","left","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","givenString","lowercase","result","join","toLowerCase","$trim","DESCRIPTORS","getKeys","toIObject","isEnum","isEntries","O","i","push","$values","toInteger","count","str","res","n","Infinity","RangeError","TableTestcaseFindings","implementations","defaultFilter","index","implementationId","findings","testcase","expected","actual","actuals","relativeUrl","getHyphenatedString","groupFindingsOfImplementations","ListOfImplementations","getPageContent","Badge"],"mappings":"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","file":"component---src-templates-implementer-incomplete-js-0153dff1d10e304603cb.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport showdown from 'showdown'\n\nimport './rule-header.scss'\n\nconst RuleHeader = ({ ruleId, ruleName, children }) => {\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<div className=\"ruleHeader\">\n\t\t\t<Link to={`/rules/${ruleId}`}>\n\t\t\t\t<h2 id={`id-${ruleId}`} dangerouslySetInnerHTML={{ __html: converter.makeHtml(ruleName) }}></h2>\n\t\t\t</Link>\n\t\t\t<div className=\"childContainer\">{children}</div>\n\t\t</div>\n\t)\n}\n\nRuleHeader.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\truleName: PropTypes.string.isRequired,\n}\n\nexport default RuleHeader\n","import techniquesTitles from '../../../_data/techniques-titles'\nimport scUrls from '../../../_data/sc-urls'\nimport React from 'react'\n\n/**\n * Conjugate outcome mapping\n * @param {String} mappingType mapping type eg: technique, requirement, success criterion\n * @param {String} outcome given string from accessibility requirement authored in frontmatte of the rule\n * @returns {String}\n */\nconst getMappingOutcomeSentence = (mappingType, outcome) => {\n\tconst outcomeMap = {\n\t\tsatisfied: 'is satisfied',\n\t\t'not satisfied': 'is not satisfied',\n\t\t'further testing needed': 'needs further testing',\n\t}\n\n\tlet outcomeValue = ``\n\tif (outcomeMap[outcome]) {\n\t\toutcomeValue = outcomeMap[outcome]\n\t}\n\n\treturn `${mappingType} ${outcomeValue}`\n}\n\nfunction OutcomeMapping({\n\tfailed = 'not satisfied',\n\tpassed = 'further testing is needed',\n\tinapplicable = 'further testing is needed',\n\ttype = 'success criterion',\n}) {\n\treturn (\n\t\t<li>\n\t\t\tOutcome mapping:\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tAny <code>failed</code> outcomes: {getMappingOutcomeSentence(type, failed)}.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tAll <code>passed</code> outcomes: {getMappingOutcomeSentence(type, passed)}.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tAn <code>inapplicable</code> outcome: {getMappingOutcomeSentence(type, inapplicable)}.\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</li>\n\t)\n}\n\nfunction AccessibilityRequirementsListing({\n\titem,\n\tlistType,\n\ttitle,\n\tlearnMore,\n\tconformanceTo,\n\turl,\n\tmapping,\n\tmappingType,\n}) {\n\tif (listType === 'text') {\n\t\treturn (\n\t\t\t<li key={item}>\n\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t{title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<details>\n\t\t\t\t<summary>{title}</summary>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\tLearn More about {learnMore}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>{conformanceTo}</li>\n\t\t\t\t\t<OutcomeMapping\n\t\t\t\t\t\ttype={mappingType}\n\t\t\t\t\t\tfailed={mapping.failed}\n\t\t\t\t\t\tpassed={mapping.passed}\n\t\t\t\t\t\tinapplicable={mapping.inapplicable}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</details>\n\t\t</li>\n\t)\n}\n\n// For documents where we provide the title, and where the item is an URL anchor\nfunction BasicListing({ accessibilityDocument, item, mapping, listType }) {\n\tconst { conformanceTo, baseURL } = {\n\t\taria11: {\n\t\t\tconformanceTo: (\n\t\t\t\t<>\n\t\t\t\t\t<strong>Required for conformance</strong> to WAI-ARIA 1.1 specifications.\n\t\t\t\t</>\n\t\t\t),\n\t\t\tbaseURL: 'https://www.w3.org/TR/wai-aria-1.1/#',\n\t\t},\n\t\t'using-aria': {\n\t\t\tconformanceTo: 'Not required to conformance to any W3C accessibility recommendation.',\n\t\t\tbaseURL: 'https://www.w3.org/TR/using-aria/#',\n\t\t},\n\t}[accessibilityDocument]\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={mapping.title}\n\t\t\tlearnMore={mapping.title}\n\t\t\tconformanceTo={conformanceTo}\n\t\t\turl={`${baseURL}${item}`}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`requirement`}\n\t\t/>\n\t)\n}\n\n// For WCAG techniques. Title is grabbed from data fetched during build. URL is handcrafted.\nfunction TechniqueListing({ item, mapping, listType }) {\n\tconst techniqueId = item.toUpperCase()\n\tconst techniqueKind = {\n\t\taria: 'aria',\n\t\tc: 'css',\n\t\tf: 'failures',\n\t\tflash: 'flash',\n\t\tg: 'general',\n\t\th: 'html',\n\t\tpdf: 'pdf',\n\t\tscr: 'client-side-script',\n\t\tsl: 'silverlight',\n\t\tsm: 'smil',\n\t\tsvr: 'server-side-script',\n\t\tt: 'text',\n\t}[item.replace(/[0-9]/g, '')]\n\n\tconst url = `https://www.w3.org/WAI/WCAG21/Techniques/${techniqueKind}/${techniqueId}`\n\tconst title = `${techniqueId}: ${techniquesTitles[techniqueId]}`\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={title}\n\t\t\tlearnMore={title}\n\t\t\tconformanceTo=\"Not required to conformance to any W3C accessibility recommendation.\"\n\t\t\turl={url}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`technique`}\n\t\t/>\n\t)\n}\n\n// For WCAG SC. Title, URL and more is grabbed from data fetched during build.\nfunction WcagListing({ item, mapping, listType }) {\n\tconst { num, url, handle, wcagType, level } = scUrls[item]\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={`${num} ${handle} (Level: ${level})`}\n\t\t\tlearnMore={`${num} (${handle})`}\n\t\t\tconformanceTo={\n\t\t\t\t<>\n\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above.\n\t\t\t\t</>\n\t\t\t}\n\t\t\turl={url}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`success criterion`}\n\t\t/>\n\t)\n}\n\nexport default function AccessibilityRequirements({ accessibility_requirements, type = 'details' }) {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping:</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance.</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping:</span>\n\t\t\t<ul>\n\t\t\t\t{Object.entries(accessibility_requirements).map(([req, mapping]) => {\n\t\t\t\t\tconst [accessibilityDocument, accessibilityItem] = req.toLocaleLowerCase().split(':')\n\n\t\t\t\t\tswitch (accessibilityDocument) {\n\t\t\t\t\t\tcase 'aria11':\n\t\t\t\t\t\tcase 'using-aria':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<BasicListing\n\t\t\t\t\t\t\t\t\tkey={accessibilityItem}\n\t\t\t\t\t\t\t\t\taccessibilityDocument={accessibilityDocument}\n\t\t\t\t\t\t\t\t\titem={accessibilityItem}\n\t\t\t\t\t\t\t\t\tmapping={mapping}\n\t\t\t\t\t\t\t\t\tlistType={type}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tcase 'wcag20':\n\t\t\t\t\t\tcase 'wcag21':\n\t\t\t\t\t\t\treturn <WcagListing key={accessibilityItem} item={accessibilityItem} mapping={mapping} listType={type} />\n\t\t\t\t\t\tcase 'wcag-technique':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TechniqueListing key={accessibilityItem} item={accessibilityItem} mapping={mapping} listType={type} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn <>Accessibility Requirements have no or unknown mapping.</>\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ListOfImplementations from '../components/list-of-implementations'\nimport RuleHeader from '../components/rule-header'\nimport Badge from '../components/badge'\nimport Note from '../components/note'\n\nimport './implementer.scss'\n\nconst Implementer = ({ location, data }) => {\n\tconst { implementerData } = data.sitePage.context\n\tconst { organisation, toolName, actMapping, description } = JSON.parse(implementerData)\n\n\tconst title = `Implementation report of ${toolName} (${organisation})`\n\tconst completeMaps = filterByConsistency(actMapping, ['consistent', 'partially-consistent'])\n\tconst incompleteMaps = filterByConsistency(actMapping, ['inconsistent'])\n\n\tif (!completeMaps || !completeMaps.length) {\n\t\treturn (\n\t\t\t<Layout location={location}>\n\t\t\t\t<SEO title={title} />\n\t\t\t\t<section className=\"page-implementer\">\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<Note\n\t\t\t\t\t\ttitle={`Insufficient implementation data`}\n\t\t\t\t\t\tbody={`There are no known implementations. This is likely because the rule has been updated and the implementation report has not yet been updated.`}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</Layout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={title} />\n\t\t\t<section className=\"page-implementer\">\n\t\t\t\t{/* title  */}\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t{/* desc  */}\n\t\t\t\t{description && <p>{description}</p>}\n\t\t\t\t{/* impl  */}\n\t\t\t\t{data.allRules.edges.map(({ node }) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tfrontmatter: { id, name, rule_type },\n\t\t\t\t\t} = node\n\n\t\t\t\t\tconst impl = completeMaps.find(({ ruleId }) => ruleId === id)\n\t\t\t\t\tconst isIncomplete = incompleteMaps.find(({ ruleId }) => ruleId === id)\n\n\t\t\t\t\tif (!impl && isIncomplete) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!impl) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * show complete implementation tabulation\n\t\t\t\t\t */\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t<Badge title={`Consistency:`} value={impl.consistency} />\n\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t<ListOfImplementations mapping={[impl]} showIncomplete={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Implementer\n\nexport const query = graphql`\n\tquery($path: String) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tfilename\n\t\t\t\ttitle\n\t\t\t\timplementerData\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\trule_type\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\n/**\n * Filter a given set of implementations based on consistency\n * @param {Array<Object>} items array of implementations\n * @param {Array<String>} values allowed values\n * @returns {Array<Object>}\n */\nexport function filterByConsistency(items, values) {\n\treturn items.filter(({ consistency }) => {\n\t\treturn values.includes(consistency)\n\t})\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ListOfImplementations from '../components/list-of-implementations'\nimport { filterByConsistency } from './implementer'\nimport AccessibilityRequirements from '../components/accessibility_requirements'\nimport RuleHeader from '../components/rule-header'\nimport Badge from '../components/badge'\n\nimport './implementer-incomplete.scss'\n\nconst ImplementerIncomplete = ({ location, data }) => {\n\tconst { implementerData } = data.sitePage.context\n\tconst { organisation, toolName, actMapping, description } = JSON.parse(implementerData)\n\n\tconst title = `Incomplete implementations report of ${toolName} (${organisation})`\n\tconst completeMaps = filterByConsistency(actMapping, ['consistent', 'partially-consistent'])\n\tconst incompleteMaps = filterByConsistency(actMapping, ['inconsistent'])\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={title} />\n\t\t\t<section className=\"page-implementer-incomplete\">\n\t\t\t\t{/* title  */}\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t{/* desc  */}\n\t\t\t\t{description && <p>{description}</p>}\n\t\t\t\t{/* impl  */}\n\t\t\t\t{data.allRules.edges.map(({ node }) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tfrontmatter: { id, name, rule_type },\n\t\t\t\t\t\tfields: { fastmatterAttributes },\n\t\t\t\t\t} = node\n\t\t\t\t\tconst { accessibility_requirements } = JSON.parse(fastmatterAttributes)\n\t\t\t\t\tconst ruleScs = Object.keys(accessibility_requirements || {})\n\t\t\t\t\t\t.filter(key => key.includes('wcag20') || key.includes('wcag21'))\n\t\t\t\t\t\t.map(key => key.split(':').pop())\n\t\t\t\t\t\t.map(sc => 'wcag' + sc.replace(/\\./g, ''))\n\t\t\t\t\tconst completeImpl = completeMaps.find(({ ruleId }) => ruleId === id)\n\t\t\t\t\tconst impl = incompleteMaps.find(({ ruleId }) => ruleId === id)\n\n\t\t\t\t\tif (completeImpl) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * When there is no complete implementation & SC's are not WCAG, list the accessibility requirements\n\t\t\t\t\t */\n\t\t\t\t\tif (!ruleScs.length) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t\t<AccessibilityRequirements accessibility_requirements={accessibility_requirements} type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!impl) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t\t<AccessibilityRequirements accessibility_requirements={accessibility_requirements} type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * show incomplete implementation tabulation\n\t\t\t\t\t */\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t<Badge title={`Consistency:`} value={impl.consistency} />\n\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t<ListOfImplementations mapping={[impl]} showIncomplete={true} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default ImplementerIncomplete\n\nexport const query = graphql`\n\tquery($path: String) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tfilename\n\t\t\t\ttitle\n\t\t\t\timplementerData\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\trule_type\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './note.scss'\n\nconst Note = ({ cls = '', title = '', body = '' }) => {\n\treturn (\n\t\t<div className={classnames('note', cls)}>\n\t\t\t<b>{title}</b>\n\t\t\t<p>{body}</p>\n\t\t</div>\n\t)\n}\n\nNote.propTypes = {\n\tcls: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tbody: PropTypes.string.isRequired,\n}\n\nexport default Note\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","const getHyphenatedString = (givenString, lowercase = true) => {\n\tconst result = givenString.split(' ').join('-')\n\n\tif (!lowercase) {\n\t\treturn result\n\t}\n\n\treturn result.toLowerCase()\n}\n\nmodule.exports = getHyphenatedString\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport getHyphenatedString from '../../utils/get-hyphenated-string'\n\nconst TableTestcaseFindings = ({ ruleId, implementations = [], filter = defaultFilter }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Testcase Url</th>\n\t\t\t\t\t<th>Expected</th>\n\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\treturn <th key={`${implementationId}- ${index}`}>{implementationId}</th>\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{Object.values(groupFindingsOfImplementations(ruleId, implementations, filter)).map(\n\t\t\t\t\t({ testcase, url, relativeUrl, expected, actuals }, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={`${url}-${index}`}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link to={relativeUrl}>{testcase}</Link>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{expected}</td>\n\t\t\t\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\t\t\t\treturn <td key={`${implementationId}-${url}=${index}`}>{actuals[implementationId]}</td>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nTableTestcaseFindings.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\timplementations: PropTypes.array.isRequired,\n\tfilter: PropTypes.func,\n}\n\nexport default TableTestcaseFindings\n\n/**\n * Group implmentation set data per testcase\n * @param {Array<Object>} implementations implementation set\n * @param {Function} filter filter fn\n * @returns {Object}\n */\nfunction groupFindingsOfImplementations(ruleId, implementations, filter) {\n\tconst result = {}\n\n\tconst filteredImplementations = implementations.filter(filter)\n\n\tfor (const { implementationId, findings } of filteredImplementations) {\n\t\tfor (const { url, testcase, expected, actual } of findings) {\n\t\t\tif (!result[testcase]) {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\turl,\n\t\t\t\t\ttestcase,\n\t\t\t\t\trelativeUrl: `/rules/${ruleId}/#${getHyphenatedString(testcase)}`,\n\t\t\t\t\texpected,\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\t...result[testcase],\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t...result[testcase].actuals,\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n\n/**\n * Default filter which returns everything\n */\nfunction defaultFilter() {\n\treturn true\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableTestcaseFindings from './table-testcase-findings'\nimport Note from './note'\n\nconst ListOfImplementations = ({ mapping = [], showIncomplete = false }) => {\n\treturn (\n\t\t<div>\n\t\t\t{mapping.map(({ ruleId = '', implementations }) => (\n\t\t\t\t<div key={ruleId}>{getPageContent(implementations, showIncomplete, ruleId)}</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nListOfImplementations.propTypes = {\n\tmapping: PropTypes.array.isRequired,\n\tshowIncomplete: PropTypes.bool,\n}\n\nexport default ListOfImplementations\n\n/**\n *\n * @param {Object[]} implementations implementations\n * @param {Boolean} showIncomplete should show incomplete implementations\n * @param {String} ruleId rule id\n */\nfunction getPageContent(implementations, showIncomplete, ruleId) {\n\tif (!implementations || !implementations.length) {\n\t\treturn (\n\t\t\t<Note\n\t\t\t\tcls={`invalid`}\n\t\t\t\ttitle={`No Implementations`}\n\t\t\t\tbody={`No complete implemenations are provided. Kindly submit a new or amended implementation report.`}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showIncomplete ? (\n\t\t\t\t<>\n\t\t\t\t\t<Note\n\t\t\t\t\t\tcls={`invalid`}\n\t\t\t\t\t\ttitle={`Incomplete Implementation`}\n\t\t\t\t\t\tbody={`Listed below are the incomplete assertions. Kindly submit an amended implementation report.`}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\t\truleId={ruleId}\n\t\t\t\t\t\timplementations={implementations}\n\t\t\t\t\t\tfilter={({ consistency }) => consistency === `inconsistent`}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\truleId={ruleId}\n\t\t\t\t\timplementations={implementations}\n\t\t\t\t\tfilter={({ consistency }) => consistency !== `inconsistent`}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './badge.scss'\n\nconst Badge = ({ title, value }) => {\n  return (\n    <div className='badge'>\n      <span className='title'>{title}</span>\n      <span>{value}</span>\n    </div>\n  )\n}\n\nBadge.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Badge"],"sourceRoot":""}